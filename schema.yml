openapi: 3.0.3
info:
  title: Deyal
  version: 1.0.0
  description: Mental Health Service
paths:
  /api/account/users/:
    get:
      operationId: account_users_list
      tags:
      - account
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteUser'
          description: ''
    post:
      operationId: account_users_create
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SiteUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SiteUser'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteUser'
          description: ''
  /api/account/users/{email}/:
    get:
      operationId: account_users_retrieve
      parameters:
      - in: path
        name: email
        schema:
          type: string
        description: A unique value identifying this site user.
        required: true
      tags:
      - account
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteUser'
          description: ''
    put:
      operationId: account_users_update
      parameters:
      - in: path
        name: email
        schema:
          type: string
        description: A unique value identifying this site user.
        required: true
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SiteUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SiteUser'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteUser'
          description: ''
    patch:
      operationId: account_users_partial_update
      parameters:
      - in: path
        name: email
        schema:
          type: string
        description: A unique value identifying this site user.
        required: true
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSiteUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSiteUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSiteUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteUser'
          description: ''
    delete:
      operationId: account_users_destroy
      parameters:
      - in: path
        name: email
        schema:
          type: string
        description: A unique value identifying this site user.
        required: true
      tags:
      - account
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/blogs/:
    get:
      operationId: blogs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - blogs
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogList'
          description: ''
    post:
      operationId: blogs_create
      tags:
      - blogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
  /api/blogs/{id}/:
    get:
      operationId: blogs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this blog.
        required: true
      tags:
      - blogs
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    put:
      operationId: blogs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this blog.
        required: true
      tags:
      - blogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    patch:
      operationId: blogs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this blog.
        required: true
      tags:
      - blogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlog'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    delete:
      operationId: blogs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this blog.
        required: true
      tags:
      - blogs
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/posts/:
    get:
      operationId: posts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - posts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostList'
          description: ''
    post:
      operationId: posts_create
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/posts/{id}/:
    get:
      operationId: posts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: posts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    patch:
      operationId: posts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: posts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/services/:
    get:
      operationId: services_list
      tags:
      - services
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
          description: ''
    post:
      operationId: services_create
      tags:
      - services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Service'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/services/{id}/:
    get:
      operationId: services_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - services
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    put:
      operationId: services_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Service'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    patch:
      operationId: services_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedService'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedService'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedService'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    delete:
      operationId: services_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - services
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/therapists/:
    get:
      operationId: therapists_list
      tags:
      - therapists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Threapist'
          description: ''
    post:
      operationId: therapists_create
      tags:
      - therapists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Threapist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Threapist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Threapist'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Threapist'
          description: ''
  /api/therapists/{id}/:
    get:
      operationId: therapists_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this therapist.
        required: true
      tags:
      - therapists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Threapist'
          description: ''
    put:
      operationId: therapists_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this therapist.
        required: true
      tags:
      - therapists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Threapist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Threapist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Threapist'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Threapist'
          description: ''
    patch:
      operationId: therapists_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this therapist.
        required: true
      tags:
      - therapists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedThreapist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedThreapist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedThreapist'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Threapist'
          description: ''
    delete:
      operationId: therapists_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this therapist.
        required: true
      tags:
      - therapists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/therapists/appointment-bookings/:
    get:
      operationId: therapists_appointment_bookings_list
      tags:
      - therapists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentBooking'
          description: ''
    post:
      operationId: therapists_appointment_bookings_create
      tags:
      - therapists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentBooking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentBooking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentBooking'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentBooking'
          description: ''
  /api/therapists/appointment-bookings/{id}/:
    get:
      operationId: therapists_appointment_bookings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this appointment booking.
        required: true
      tags:
      - therapists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentBooking'
          description: ''
    put:
      operationId: therapists_appointment_bookings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this appointment booking.
        required: true
      tags:
      - therapists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentBooking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentBooking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentBooking'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentBooking'
          description: ''
    patch:
      operationId: therapists_appointment_bookings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this appointment booking.
        required: true
      tags:
      - therapists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentBooking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentBooking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentBooking'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentBooking'
          description: ''
    delete:
      operationId: therapists_appointment_bookings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this appointment booking.
        required: true
      tags:
      - therapists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/therapists/appointment-times/:
    get:
      operationId: therapists_appointment_times_list
      tags:
      - therapists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentTime'
          description: ''
    post:
      operationId: therapists_appointment_times_create
      tags:
      - therapists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentTime'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentTime'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentTime'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentTime'
          description: ''
  /api/therapists/appointment-times/{id}/:
    get:
      operationId: therapists_appointment_times_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this appointment time.
        required: true
      tags:
      - therapists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentTime'
          description: ''
    put:
      operationId: therapists_appointment_times_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this appointment time.
        required: true
      tags:
      - therapists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentTime'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentTime'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentTime'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentTime'
          description: ''
    patch:
      operationId: therapists_appointment_times_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this appointment time.
        required: true
      tags:
      - therapists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentTime'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentTime'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentTime'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentTime'
          description: ''
    delete:
      operationId: therapists_appointment_times_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this appointment time.
        required: true
      tags:
      - therapists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    AppointmentBooking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
        email:
          type: string
          format: email
          maxLength: 254
        current_age:
          type: integer
          maximum: 32767
          minimum: 0
        phone_no:
          type: string
          nullable: true
          maxLength: 15
        gender:
          $ref: '#/components/schemas/GenderEnum'
        site_user:
          type: string
        appointment_time:
          type: integer
          nullable: true
      required:
      - current_age
      - email
      - full_name
      - gender
      - id
      - site_user
    AppointmentTime:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        appointment_type:
          $ref: '#/components/schemas/AppointmentTypeEnum'
        details:
          type: string
          description: Ex. Monday (9 PM to 11 PM)
        therapist:
          type: integer
      required:
      - appointment_type
      - details
      - id
      - therapist
    AppointmentTypeEnum:
      enum:
      - online
      - offline
      type: string
      description: |-
        * `online` - Online Appointment
        * `offline` - Offline Appointment
    Blog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        date:
          type: string
          readOnly: true
        des:
          type: string
        therapist:
          type: integer
      required:
      - date
      - des
      - id
      - therapist
      - title
    GenderEnum:
      enum:
      - male
      - female
      - other
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
        * `other` - Other
    PaginatedBlogList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Blog'
    PaginatedPostList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    PatchedAppointmentBooking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
        email:
          type: string
          format: email
          maxLength: 254
        current_age:
          type: integer
          maximum: 32767
          minimum: 0
        phone_no:
          type: string
          nullable: true
          maxLength: 15
        gender:
          $ref: '#/components/schemas/GenderEnum'
        site_user:
          type: string
        appointment_time:
          type: integer
          nullable: true
    PatchedAppointmentTime:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        appointment_type:
          $ref: '#/components/schemas/AppointmentTypeEnum'
        details:
          type: string
          description: Ex. Monday (9 PM to 11 PM)
        therapist:
          type: integer
    PatchedBlog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        date:
          type: string
          readOnly: true
        des:
          type: string
        therapist:
          type: integer
    PatchedPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
        site_user:
          type: string
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedService:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        duration:
          type: number
          format: double
        img:
          type: string
          format: uri
          maxLength: 200
        description:
          type: string
        what:
          type: string
        sym:
          type: array
          items:
            type: string
          readOnly: true
        cure:
          type: string
    PatchedSiteUser:
      type: object
      properties:
        email:
          type: string
        full_name:
          type: string
        photo_url:
          type: string
          format: uri
          maxLength: 200
    PatchedThreapist:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        speciality:
          type: integer
          nullable: true
        img:
          type: string
          format: uri
          maxLength: 200
        expyear:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description:
          type: string
    Post:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        details:
          type: string
        site_user:
          type: string
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - details
      - id
      - site_user
    Service:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        duration:
          type: number
          format: double
        img:
          type: string
          format: uri
          maxLength: 200
        description:
          type: string
        what:
          type: string
        sym:
          type: array
          items:
            type: string
          readOnly: true
        cure:
          type: string
      required:
      - cure
      - description
      - duration
      - id
      - img
      - sym
      - title
      - what
    SiteUser:
      type: object
      properties:
        email:
          type: string
        full_name:
          type: string
        photo_url:
          type: string
          format: uri
          maxLength: 200
      required:
      - email
      - full_name
      - photo_url
    Threapist:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        speciality:
          type: integer
          nullable: true
        img:
          type: string
          format: uri
          maxLength: 200
        expyear:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description:
          type: string
      required:
      - description
      - expyear
      - id
      - img
      - name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
